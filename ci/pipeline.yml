get-params-git: &get-params-git
  depth: 1
  submodules: none
  disable_git_lfs: true

resource_types:
- name: fly
  type: docker-image
  source:
    repository: troykinsella/concourse-fly-resource
    tag: latest

resources:
- name: git-docker-androidbuild
  type: git
  icon: github
  source:
    uri: git@github.com:ionphractal/docker-androidbuild.git
    branch: master
    private_key: ((git.github_private_key))
    git_config:
      user.name: ((git.user))
      user.email: ((git.email))
- name: docker-baseimage
  type: registry-image
  icon: docker
  source:
    repository: ubuntu
    tag: 18.04
- name: docker-androidbuild
  type: registry-image
  icon: docker
  source:
    repository: ionphractal/docker-androidbuild
    username: ((dockerhub.username))
    password: ((dockerhub.password))
- name: docker-androidbuild-local-pipeline
  type: registry-image
  icon: docker
  source:
    repository: registry.local:5000/ionphractal/docker-androidbuild-pipeline
    tag: latest
- name: git-repo-tool
  type: git
  icon: github
  source:
    uri: https://gerrit.googlesource.com/git-repo/
    tag_filter: v[0-9].[0-9]*
- name: git-lineageos-android
  type: git
  icon: github
  source:
    uri: https://github.com/LineageOS/android.git
- name: git-lineageos-android-vendor-lineage
  type: git
  icon: github
  source:
    uri: https://github.com/LineageOS/android_vendor_lineage.git
# - name: git-lineageos-android-frameworks-base
#   type: git
#   icon: github
#   source:
#     uri: https://github.com/LineageOS/android_frameworks_base.git
- name: git-lineageos-android-device-sony-discovery
  type: git
  icon: github
  source:
    uri: https://github.com/LineageOS/android_device_sony_discovery.git
- name: git-lineageos-mirror
  type: git
  icon: github
  source:
    uri: https://github.com/LineageOS/mirror.git
# - name: git-proprietary-muppets
#   type: git
#   icon: github
#   source:
#     uri: https://github.com/TheMuppets/manifests.git
# - name: git-proprietary-muppets-gitlab
#   type: git
#   icon: github
#   source:
#     uri: https://gitlab.com/the-muppets/manifest.git

- name: once-a-day
  type: time
  icon: timer
  source:
    start: 0:00 AM
    stop: 0:01 AM

- name: fly
  type: fly
  icon: concourse-ci
  source:
    url: ((concourse.url))
    username: ((concourse.username))
    password: ((concourse.password))
    target: ((concourse.target))

jobs:
- name: update-build-image
  serial_groups:
  - io-intensive
  - android-build
  plan:
  - in_parallel:
    - get: git-docker-androidbuild
      trigger: true
    - get: docker-baseimage
      trigger: true
    - get: git-repo-tool
      trigger: true
    # - get: git-delta-tool
    #   trigger: true
  - task: build
    privileged: true
    config:
      platform: linux

      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task

      caches:
      - path: cache

      inputs:
      - name: git-docker-androidbuild

      outputs:
      - name: image

      params:
        CONTEXT: git-docker-androidbuild

      run:
        path: sh
        args:
        - -c
        - |
          echo "Building public image"
          build
          mv image/image.tar image/image-public.tar

          echo "Adding tools for the pipeline"
          sed -i -e "/^USER /i\RUN apt update -y && apt dist-upgrade -y && apt install -y nfs-common" git-docker-androidbuild/Dockerfile

          echo "Building pipeline image"
          build
          mv image/image.tar image/image-pipeline.tar
  - in_parallel:
    - put: docker-androidbuild
      params:
        image: image/image-public.tar
    - put: docker-androidbuild-local-pipeline
      params:
        image: image/image-pipeline.tar

# update the local mirror when there is a reason to
- name: prepare-mirror
  serial_groups:
  - io-intensive
  plan:
  - in_parallel:
    - get: git-docker-androidbuild
      trigger: false
    - get: docker-androidbuild-local-pipeline
      trigger: false
    - get: git-lineageos-mirror
      params: *get-params-git
      trigger: true
    - get: git-lineageos-android
      params: *get-params-git
      trigger: true
    - get: git-lineageos-android-vendor-lineage
      params: *get-params-git
      trigger: true
    - get: git-lineageos-android-device-sony-discovery
      params: *get-params-git
      trigger: true
    # - get: git-local-manifests
    #   trigger: true

  - task: sync-repo
    # must be privileged or else mount does not work :/
    privileged: true
    config:
      platform: linux

      image_resource:
        type: registry-image
        source:
          repository: registry.local:5000/ionphractal/docker-androidbuild-pipeline

      inputs:
      - name: git-docker-androidbuild
      - name: git-lineageos-mirror
      # - name: git-local-manifests

      params:
        MIRROR_SHARE: ((mirror.share))
        SSH_KEY: ((build-server.key))

      run:
        user: root
        path: bash
        args:
        - -c
        - |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # set required env vars and source/import build functions
          export BUILD_SCRIPTS_PATH="$(pwd)/git-docker-androidbuild/src"
          export BUILD_FLAVOR_SCRIPTS_PATH="${BUILD_SCRIPTS_PATH}/flavors/${BUILD_FLAVOR:-microg}"
          export LOCAL_MIRROR=true
          export LMANIFEST_DIR=$(pwd)/git-local-manifests
          export MIRROR_DIR=$(pwd)/mirror
          . "${BUILD_SCRIPTS_PATH}/load-env.sh"
          . "${BUILD_FLAVOR_SCRIPTS_PATH}/build.sh"

          export REPO_LOG=/dev/stdout
          export DEBUG_LOG=${REPO_LOG}

          mkdir -p ${LMANIFEST_DIR}
          mkdir -p ${MIRROR_DIR}

          # mount mirror directory
          sudo mount -v ${MIRROR_SHARE} ${MIRROR_DIR}

          pushd ${MIRROR_DIR}/.repo/repo &>/dev/null
          git reset --hard origin/master
          popd &>/dev/null
          # mirror_init
          find ${MIRROR_DIR} \! -uid 1000 \! -type l -exec chown 1000:1000 {} \;
          ssh -l ((build-server.user)) -i ~/.ssh/id_rsa ((build-server.host)) -o StrictHostKeyChecking=false -- "touch /storage/android/docker/build.today"
    on_success:
      put: fly
      params:
        options: unpause-job --job docker-androidbuild/run-build

- name: run-build
  serial_groups:
  - io-intensive
  plan:
  - get: once-a-day
    trigger: true
  - task: run-build
    config:
      platform: linux

      image_resource:
        type: registry-image
        source:
          repository: registry.local:5000/ionphractal/docker-androidbuild-pipeline

      inputs:

      params:
        SSH_KEY: ((build-server.key))

      run:
        path: bash
        args:
        - -c
        - |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Starting build process on remote ((build-server.user))@((build-server.host))"
          ssh -l ((build-server.user)) -i ~/.ssh/id_rsa ((build-server.host)) -o StrictHostKeyChecking=false -- "if [ -f /storage/android/docker/build.today ]; then bash /storage/android/docker/build.sh; retcode=$?; rm /storage/android/docker/build.today; exit $retcode; fi"
    ensure:
      put: fly
      params:
        options: pause-job --job docker-androidbuild/run-build
